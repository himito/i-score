#!/bin/bash -eux
set -o pipefail
 

# Minimal stuff
yum -y install epel-release
yum -y update
yum -y install libmpc gcc  wget tar bzip2 xz git libxml2  binutils fuse mesa-libGL-devel glibc-devel glib2-devel fuse-devel zlib-devel libpng12 libXrender fontconfig freetype xcb-util xcb-util-image xcb-util-keysyms xcb-util-renderutil xcb-util-wm libXi alsa-lib-devel


git_pull_rebase_helper()
{
    git reset --hard HEAD
    git pull
    git submodule update --init --recursive
}

# Install required libs
wget -nv https://github.com/OSSIA/iscore-sdk/releases/download/5.0-linux/i-score-sdk-linux-5.0.txz -O i-score-sdk.txz
tar -xaf i-score-sdk.txz --directory /
cp -rf /usr/local/lib64/* /usr/lib64/

wget -nv https://github.com/OSSIA/iscore-sdk/releases/download/1.0/jamoma.txz
tar -xaf jamoma.txz --directory /usr/local/

wget -nv http://downloads.sourceforge.net/project/boost/boost/1.61.0/boost_1_61_0.tar.bz2
tar -xaf boost_1_61_0.tar.bz2
mv boost_1_61_0 boost

# Build AppImage
(
    if [ ! -d AppImages ] ; then
        git clone https://github.com/probonopd/AppImages.git
    fi
    
    cd AppImages/
    git_pull_rebase_helper
)

# Download CMake
(
    wget -nv --no-check-certificate -c https://cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz
    tar xaf cmake-*.tar.gz
)

# Set-up paths
export CMAKE_PATH=$(find $PWD/cmake-*/ -type d | head -n 1)bin
export LD_LIBRARY_PATH=/usr/local/lib64:$LD_LIBRARY_PATH
export PATH=/usr/local/bin:$CMAKE_PATH:$PATH

# Build AppImageKit
(
    if [ ! -d AppImageKit ] ; then
        git clone https://github.com/probonopd/AppImageKit.git
    fi
    cd AppImageKit/
    git_pull_rebase_helper
    cmake .
    make clean
    make
) 
