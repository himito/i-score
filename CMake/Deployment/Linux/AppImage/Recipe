#!/bin/bash -eux
set -o pipefail

# Set-up paths
export BOOST_ROOT=$PWD/boost
export CMAKE_PATH=$(find $PWD/cmake-*/ -type d | head -n 1)bin
export LD_LIBRARY_PATH=/usr/local/lib64
export PATH=/usr/local/bin:$CMAKE_PATH:$PATH

git_pull_rebase_helper()
{
    git reset --hard HEAD
    git pull
    git submodule update --init --recursive
}

export NPROC=$(nproc)

export BUILD_DIR=i-score-build
export APP=i-score
rm -rf ./$BUILD_DIR/$APP.AppDir
mkdir -p ./$BUILD_DIR/$APP.AppDir
cd ./$BUILD_DIR

# Get i-score from git
(
    if [ ! -d i-score ] ; then
        git clone https://github.com/OSSIA/i-score
    fi
    
    cd i-score/
    git_pull_rebase_helper
)

# Build i-score in the AppDir
mkdir -p $APP.AppDir/usr

(
    export INSTALL_ROOT=$(cd $APP.AppDir/usr; pwd)
    mkdir -p build
    
    cd build
    cmake ../i-score -DISCORE_CONFIGURATION=release -DCMAKE_INSTALL_PREFIX=$INSTALL_ROOT -DCMAKE_PREFIX_PATH="/usr/local/jamoma/share/cmake/Jamoma;$(dirname $(find /usr/local -name 'Qt5Config.cmake'))" -DBOOST_ROOT=$BOOST_ROOT -DCMAKE_SKIP_RPATH=ON
    
    cmake --build . --target all_unity -- -j$NPROC
    cmake --build . --target install -- -j$NPROC
)

# Copy pixmaps
cp $APP.AppDir/usr/share/applications/i-score.desktop $APP.AppDir/
cp $APP.AppDir/usr/share/pixmaps/i-score.png $APP.AppDir/

export QTDIR=$(find /usr/local -type d -name 'Qt-5.*')
# Copy needed libraries and remove system ones
(
    cd $APP.AppDir
    cp ../../AppImageKit/AppRun .
    chmod a+x AppRun
    mkdir -p ./usr/lib/qt5/
    cp -rf "$QTDIR/plugins/"  ./usr/lib/qt5/plugins
    
    # Dependencies of plugins and i-score
    for lib in usr/lib/libiscore_lib_*; do ldd $lib; done | grep 'Qt5' | awk '{ print $1; }' | sort | uniq | xargs -I '{}' cp -v $QTDIR/lib/'{}' ./usr/lib
    for lib in usr/lib/i-score/*; do ldd $lib; done | grep 'Qt5' | awk '{ print $1; }' | sort | uniq | xargs -I '{}' cp -v $QTDIR/lib/'{}' ./usr/lib
    ldd usr/bin/i-score | grep "=>" | awk '{print $3}'  |  xargs -I '{}' cp -v '{}' ./usr/lib || true
    
    # Jamoma
    cp -v ../build/API/Implementations/Jamoma/libAPIJamoma.so usr/lib/
    cp -v /usr/local/jamoma/lib/libJamomaFoundation.so.6 usr/lib/
    cp -v /usr/local/jamoma/lib/libJamomaDSP.so.6 usr/lib/
    cp -v /usr/local/jamoma/lib/libJamomaModular.so.6 usr/lib/
    cp -v /usr/lib64/libxml2.so.2 usr/lib/
    mkdir usr/lib/jamoma
    for name in Minuit OSC AnalysisLib DataspaceLib FunctionLib System NetworkLib
    do
        cp -v /usr/local/jamoma/lib/jamoma/$name.ttso usr/lib/jamoma
    done
    
    # Dependencies of qt
    ldd usr/lib/qt5/plugins/platforms/libqxcb.so | grep "=>" | awk '{print $3}'  |  xargs -I '{}' cp -v '{}' ./usr/lib || true
    cp -v $QTDIR/lib/libQt5XcbQpa.so.5 ./usr/lib || true
    ldd ./usr/lib/libQt5XcbQpa.so.5 | grep "=>" | awk '{print $3}'  |  xargs -I '{}' cp -v '{}' ./usr/lib || true
    cp -v $QTDIR/lib/libQt5DBus.so.5 ./usr/lib || true
    
    # Taken from Subsurface appimage
    # The following are assumed to be part of the base system
    rm -f usr/lib/libcom_err.so.2 || true
    rm -f usr/lib/libcrypt.so.1 || true
    rm -f usr/lib/libdl.so.2 || true
    rm -f usr/lib/libexpat.so.1 || true
    rm -f usr/lib/libfontconfig.so.1 || true
    rm -f usr/lib/libgcc_s.so.1 || true
    rm -f usr/lib/libglib-2.0.so.0 || true
    rm -f usr/lib/libgpg-error.so.0 || true
    rm -f usr/lib/libgssapi_krb5.so.2 || true
    rm -f usr/lib/libgssapi.so.3 || true
    rm -f usr/lib/libhcrypto.so.4 || true
    rm -f usr/lib/libheimbase.so.1 || true
    rm -f usr/lib/libheimntlm.so.0 || true
    rm -f usr/lib/libhx509.so.5 || true
    rm -f usr/lib/libICE.so.6 || true
    rm -f usr/lib/libidn.so.11 || true
    rm -f usr/lib/libk5crypto.so.3 || true
    rm -f usr/lib/libkeyutils.so.1 || true
    rm -f usr/lib/libkrb5.so.26 || true
    rm -f usr/lib/libkrb5.so.3 || true
    rm -f usr/lib/libkrb5support.so.0 || true
    rm -f usr/lib/libm.so.6 || true
    rm -f usr/lib/libp11-kit.so.0 || true
    rm -f usr/lib/libpcre.so.3 || true
    rm -f usr/lib/libpthread.so.0 || true
    rm -f usr/lib/libresolv.so.2 || true
    rm -f usr/lib/libroken.so.18 || true
    rm -f usr/lib/librt.so.1 || true
    rm -f usr/lib/libsasl2.so.2 || true
    rm -f usr/lib/libSM.so.6 || true
    rm -f usr/lib/libusb-1.0.so.0 || true
    rm -f usr/lib/libuuid.so.1 || true
    rm -f usr/lib/libwind.so.0 || true
    rm -f usr/lib/libz.so.1 || true
    
    # Delete potentially dangerous libraries
    rm -f usr/lib/libgobject* usr/lib/libc.so.* || true

    strip usr/bin/i-score usr/lib/*.* usr/lib/qt5/plugins/*/*.* usr/lib/i-score/*.* || true

    cd usr/ ; find . -type f -exec sed -i -e 's|/usr/lib|././/lib|g' {} \; ; cd ..
    cd usr/ ; find . -type f -exec sed -i -e "s|$QTDIR/lib|././/lib|g" {} \; ; cd ..
)

cp i-score/CMake/Deployment/Linux/AppImage/qt.conf $APP.AppDir/usr/bin/
mkdir -p i-score.AppDir/usr/bin/lib/

export APPIMAGE=i-score.AppImage

rm -rf out || true
mkdir -p out

# Convert the AppDir into an AppImage
../AppImageKit/AppImageAssistant.AppDir/package ./$APP.AppDir/ ./out/$APPIMAGE

chmod a+rwx out/$APPIMAGE
ls -lh out/$APPIMAGE
mv ./out/$APPIMAGE /$APPIMAGE

